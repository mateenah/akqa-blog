{"version":3,"file":"static/webpack/static/development/pages/index.js.af2a3578b651234d4df7.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from '../components/myLayout.js'\nimport Link from 'next/link'\nimport {createClient} from '../helpers/getcontent';\nimport React from 'react'\nimport { type } from 'os';\n\n\nfunction getPosts(){\n  return [\n    { id:'hello-nextjs' , title:'Hello Next.js' },\n    { id:'learn-nextjs' , title:'Learn Next.js is awesome' },\n    { id:'deploy-nextjs' , title:'Deploy apps with Zeit' },\n  ]\n}\nconst PostLink = ({ post }) => (\n  <li>\n    <Link as={`/p/${post.id}`} href={`/post?title=${post.title}`}>\n      <a>{post.title}</a>\n    </Link>\n  </li>\n)\n\n\n\n// const Index = () => (\n//   <Layout>\n//     <h1>My Blog</h1>\n    \n//     <p>{someEntryAsProp.text}</p>\n//     <ul>\n//     { getPosts().map((post) => (\n//        <PostLink key={post.id} post={post}/>\n//     ))}\n//     </ul>\n//   </Layout>\n//   );\n\n  // Index.getInitialProps = async () => {\n    \n  //   console.log('> Starting import',);\n  //  const client = createClient();\n  //    const entries = await client.getEntries({\n  //     // some query\n  //     content_type:type,\n  //     include:1\n  //    });\n\n  //    const someEntryAsProp = entries.items[0].fields;\n\n  //   // console.log(entries)\n  //   console.log(\"entries.items[0]-----\",entries.items[0])\n  //   console.log(\"someEntryAsProp----\",someEntryAsProp)\n  //   // console.log('> Content gotten and written for',)\n    \n  //   return { someEntryAsProp };\n  //   //return {};\n  // };\n\n\n  \n  export default class extends React.Component {\n    static async getInitialProps() {\n            const client = createClient();\n            const entries = await client.getEntries({\n              // some query\n              content_type:type,\n              include:1\n            });   \n            const someEntryAsProp = entries.items;\n          \n            console.log('> Content gotten and written for',)\n            \n            return { someEntryAsProp };\n    }\n\n\n\n\n    render() {\n      return (\n        <Layout>\n        <h1>My Blog</h1>\n        \n        <p>{this.props.someEntryAsProp[0].fields.title}</p>\n        <p>{this.props.someEntryAsProp[1].fields.title}</p>\n        <ul>\n        { getPosts().map((post) => (\n           <PostLink key={post.id} post={post}/>\n        ))}\n        </ul>\n        <div class=\"row\">\n        <div class=\"col-12 mb-3\">\n        \n\n<div class=\"card text-white bg-success mb-3\" >\n  <div class=\"card-header\">Header</div>\n  <div class=\"card-body\">\n    <h4 class=\"card-title\">Success card title</h4>\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n  </div>\n</div>\n\n<div class=\"card text-white bg-warning mb-3\" >\n  <div class=\"card-header\">Header</div>\n  <div class=\"card-body\">\n    <h4 class=\"card-title\">Warning card title</h4>\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n  </div>\n</div>\n<div class=\"card text-white bg-info mb-3\" >\n  <div class=\"card-header\">Header</div>\n  <div class=\"card-body\">\n    <h4 class=\"card-title\">Info card title</h4>\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n  </div>\n</div>\n<div class=\"card bg-light mb-3\">\n  <div class=\"card-header\">Header</div>\n  <div class=\"card-body\">\n    <h4 class=\"card-title\">Light card title</h4>\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n  </div>\n</div>\n<div class=\"card text-white bg-dark mb-3\">\n  <div class=\"card-header\">Header</div>\n  <div class=\"card-body\">\n    <h4 class=\"card-title\">Dark card title</h4>\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n  </div>\n</div>\n\n</div></div>\n      </Layout>\n      );\n    }\n\n\n  }  \n\n  \n\n\n\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAoBA;AACA;AAOA;AACA;AAAA;AAAA;AADA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;;;;;;;;;;;;AAxEA;;AACA;AACA;AACA;AACA;AAHA;AACA;;AADA;AAKA;AAEA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAbA;AACA;;;;;A","sourceRoot":""}