{"version":3,"file":"static/webpack/static/development/pages/index.js.48cfd8301f08f934ca7d.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from '../components/myLayout.js'\nimport Link from 'next/link'\nimport {createClient} from '../helpers/getcontent';\nimport React from 'react'\nimport { type } from 'os';\n\n\nfunction getPosts(){\n  return [\n    { id:'hello-nextjs' , title:'Hello Next.js' },\n    { id:'learn-nextjs' , title:'Learn Next.js is awesome' },\n    { id:'deploy-nextjs' , title:'Deploy apps with Zeit' },\n  ]\n}\nconst PostLink = ({ post }) => (\n  <li>\n    <Link as={`/p/${post.id}`} href={`/post?title=${post.title}`}>\n      <a>{post.title}</a>\n    </Link>\n  </li>\n)\n\n  // const MediaItem = ({item}) => {\n  //   item.isVideo ? <video /> : <img />\n  // }\n\n// const CheckMediaItem = ({data1}) => {\n\n//   if(dataCheck.fields.media) { /* do stuff */ \n//         <div className=\"card-body\">\n//         {/* <MediaItem item={data.fields.media.fields.file}/>  */}\n//             <img src={dataCheck.fields.media && dataCheck.fields.media.fields.file.url} className=\"card-link\" style= {divStyle}/>\n//         </div> \n//       }else{\n//          <div className=\"card-body\">\n//                 <p className=\"card-text\" key=\"{data.fields.content}\">{data.fields.content}</p>\n//                 {/* <a className=\"card-link\" href={data.fields.mediaLink}>{data.fields.mediaLink}</a>  */}\n//                 <div width=\"200\" height=\"345\" dangerouslySetInnerHTML={{ __html: data.fields.embedLink}} >\n//                 </div>\n//               </div>\n//       }\n\n\n//   }\n\n\n  const ContentfulCard = ({ data }) => (\n     <div className=\"col-md-4 mb-3\">\n      <div className=\"card text-white bg-primary mb-3\">\n\n              <div className=\"card-title text-muted\"><h3 key=\"{data.fields.title}\">{data.fields.title}</h3></div>\n\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Special title treatment</h5>\n                <h4 className=\"card-subtitle text-muted\" key=\"{data.fields.slug}\">{data.fields.slug}</h4>\n              </div>\n              \n                   {(data.fields.media) ? \n                    ( <div className=\"card-body\">\n                         <p className=\"card-text\" key=\"{data.fields.content}\">{data.fields.content}</p>\n                          <img src={data.fields.media && data.fields.media.fields.file.url} key=\"{data.fields.media}\" className=\"card-link\"/>\n                      </div> ):\n                  (\n                      <div className=\"card-body\">\n                              <p className=\"card-text\" key=\"{data.fields.content}\">{data.fields.content}</p>\n                              <div width=\"200\" height=\"345\"key=\"{data.fields.embedLink}\"  dangerouslySetInnerHTML={{ __html: data.fields.embedLink}} >\n                              </div>\n                            </div>\n                  )} \n         </div>  \n         <style jsx>{`\n         img{\n           width:100%\n         }\n                .card:hover {\n                  transform: scale(1.1);\n                  transition: 0.2s all cubic-bezier(0.175, 0.885, 0.32, 1.275);\n                  boxShadow: 0 30px 30px rgba(0, 0, 0, 0.5);\n                }\n              `}</style>   \n      </div>\n\n      \n )\n      \n        \n \n  \n const CrouselCard = ({ data }) => (\n   \n   \n  <div className=\"item active\">\n      \n<div className=\"card text-white bg-primary mb-3\">\n           <div className=\"card-title text-muted\"><h3 key=\"{data.fields.title}\">{data.fields.title}</h3></div>\n\n           <div className=\"card-body\">\n             <h5 className=\"card-title\">Special title treatment</h5>\n             <h4 className=\"card-subtitle text-muted\" key=\"{data.fields.slug}\">{data.fields.slug}</h4>\n           </div>\n           \n           \n               {(data.fields.media) ? \n                 ( <div className=\"card-body\">\n                      <p className=\"card-text\" key=\"{data.fields.content}\">{data.fields.content}</p>\n                       <img src={data.fields.media && data.fields.media.fields.file.url} key=\"{data.fields.media}\" className=\"card-link\" style= {divStyle}/>\n                   </div> ):\n               (\n                   <div className=\"card-body\">\n                           <p className=\"card-text\" key=\"{data.fields.content}\">{data.fields.content}</p>\n                           <div width=\"200\" height=\"345\"key=\"{data.fields.embedLink}\"  dangerouslySetInnerHTML={{ __html: data.fields.embedLink}} >\n                           </div>\n                         </div>\n               )}\n             \n</div>\n           \n</div>\n   \n)\n  \n export default class extends React.Component {\n   \n          static async getInitialProps() {\n                  const client = createClient();\n                  const entries = await client.getEntries({\n                    content_type:type,\n                    include:1\n                  });   \n                  const someEntryAsProp = entries.items;\n                  for(let i = 0; i<someEntryAsProp.length; i++) {\n                    const entries111 = entries.items[i];\n                    console.log(\"entries111\", entries111.fields.media)\n                }\n                \n                  // console.log(\"someEntryAsProp\",someEntryAsProp)\n                //  console.log(\"entries111\",entries111.fields.mediaLink.fields.file)\n                  console.log('> Content gotten and written for')\n                  return { someEntryAsProp };\n          }\n\n          render() {\n            return (\n              <Layout>\n              <h1>Finidngs</h1>\n              <div className=\"row\">\n                  {this.props.someEntryAsProp.map(data =>   \n                  <ContentfulCard key={data.id} data={data} />)}      \n              </div>\n            </Layout>\n            );\n          }\n      \n        }\n\n    \n        const divStyle = {\n          width: '100%'\n        };\n\n        // const cardStyle = {\n        \n        //   transform: 'scale(1.2)',\n        //   transition: '0.2s all cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n        //   boxShadow: '0 30px 30px rgba(0, 0, 0, 0.5)',\n          \n        // };\n\n      \n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AASA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAAA;AADA;AACA;AAyCA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AACA;;;;;;;;;;;;;;AAoDA;AACA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAKA;;;;;;;;;;;;AA3BA;;AACA;AACA;AACA;AAFA;AACA;;AADA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAlBA;AACA;;AAkCA;AACA;AADA;AAMA;AACA;AACA;AAEA;;;;A","sourceRoot":""}